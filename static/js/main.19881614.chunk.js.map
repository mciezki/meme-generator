{"version":3,"sources":["firebase.js","store/UserProvider.js","CustomHooks.js","components/Header/Header.js","components/MemeGenerator/subcomponents/Form.js","components/MemeGenerator/subcomponents/Meme.js","components/MemeGenerator/subcomponents/Images.js","components/MemeGenerator/MemeGenerator.js","components/Content/Likes.js","components/PortalPages/HomePage.js","components/PortalPages/UserPage.js","components/PortalPages/TopMemes.js","components/Content/Content.js","img/Splash/loading.gif","components/Content/SplashScreen.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","fontawesome.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","provider","GoogleAuthProvider","messaging","getToken","setTokenFound","a","navigator","serviceWorker","register","vapidKey","serviceWorkerRegistration","then","currentToken","console","log","catch","err","UserContext","createContext","user","UserProvider","children","useState","setUser","useEffect","onAuthStateChanged","userAuth","Provider","value","useWindowWidthAndHeight","windowInnerSize","window","innerWidth","innerHeight","windowSize","setWidowSize","changeWindowSize","addEventListener","removeEventListener","list","icon","name","path","exact","Header","useContext","width","menu","map","element","className","to","onClick","signOut","signInWithPopup","Form","title","upperValue","bottomValue","textSize","handleChange","type","placeholder","onChange","Meme","selectedImage","height","exitGen","setTitle","bottomText","setBottomText","upperText","setUpperText","setTextSize","upperX","setUpperX","upperY","setUpperY","bottomX","setBottomX","bottomY","setBottomY","isGrabbed","setIsGrabbed","handleMouseMove","useCallback","e","rect","document","getElementById","getBoundingClientRect","offsetX","clientX","left","offsetY","clientY","top","target","id","handleMouseDown","handleMouseUp","actionOnMeme","canvasdata","createElement","download","href","body","appendChild","click","memeId","result","characters","charactersLength","length","i","charAt","Math","floor","random","idGenerator","newMeme","index","date","Date","creator","uid","url","likes","alert","collection","doc","set","manageMeme","svg","svgData","XMLSerializer","serializeToString","canvas","setAttribute","svgSize","svgHeight","img","btoa","unescape","encodeURIComponent","onload","getContext","drawImage","toDataURL","textStyle","fontFamily","textTransform","fill","stroke","userSelect","xmlns","xmlnsXlink","xlinkHref","style","fontSize","x","y","dominantBaseline","textAnchor","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","Images","allMemeImg","selectImg","elementStyle","src","margin","backgroundImage","backgroundRepeat","backgroundPosition","backgroundClip","backgroundSize","border","borderRadius","allImages","data-url","MemeGenerator","setSelectedImage","setAllMemeImg","modalOpen","setModalOpen","selectedImageWidth","setSelectedImageWidth","selectedImageHeight","setSelectedImageHeight","fetch","response","json","memes","data","test","userAgent","documentElement","requestFullscreen","querySelector","webkitRequestFullScreen","screen","orientation","lock","dataset","base64img","baseImage","Image","crossOrigin","wrh","dataURL","classList","add","remove","unlock","Likes","meme","likesUsers","setLikesUsers","get","likesList","memeRef","accountList","includes","filter","update","HomePage","postedMemes","setPostedMemes","snapshot","docs","sort","e1","e2","alt","UserPage","userMemes","setUserMemes","currentUser","deleteMeme","memeIndex","confirm","delete","TopMemes","topMemes","setTopMemes","slice","Content","component","render","SplashScreen","backgroundColor","loading","position","transform","App","isLoading","setIsLoading","isTokenFound","setTimeout","basename","process","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","library","faHome","faUser","faHammer","faTrophy","faThumbsUp","faSignInAlt","faSignOutAlt","faTrashAlt","ReactDOM","StrictMode","URL","origin","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"0VAgBAA,IAASC,cAXc,CACnBC,OAAQ,0CACRC,WAAY,uCACZC,YAAa,8EACbC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIZ,IAAMC,EAAOV,IAASU,OAChBC,EAAYX,IAASW,YAE5BC,EAAW,IAAIZ,IAASU,KAAKG,mBAM7BC,EAAYd,IAASc,YAEdC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACQC,UAAUC,cAAcC,SAAS,qBADzC,cACdD,EADc,yBAEbL,EAAUC,SAAS,CACtBM,SAAU,0FACVC,0BAA2BH,IAC5BI,MAAK,SAACC,GACDA,GACAC,QAAQC,IAAI,6BAA8BF,GAC1CR,GAAc,KAEdS,QAAQC,IAAI,wEACZV,GAAc,OAEnBW,OAAM,SAACC,GACNH,QAAQC,IAAI,6CAA8CE,OAd1C,2CAAH,sDCzBRC,EAAcC,wBAAc,CAAEC,KAAM,OAgBlCC,EAdM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACXC,mBAAS,MADE,mBAC5BH,EAD4B,KACtBI,EADsB,KAOnC,OAJAC,qBAAU,WACN1B,EAAK2B,oBAAmB,SAAAC,GAAQ,OAAIH,EAAQG,QAC7C,IAGC,cAACT,EAAYU,SAAb,CAAsBC,MAAO,CAAET,QAA/B,SACKE,KCZAQ,EAA0B,WACnC,IAAIC,EAAkB,CAACC,OAAOC,WAAYD,OAAOE,aADR,EAERX,mBAASQ,GAFD,mBAEpCI,EAFoC,KAExBC,EAFwB,KAazC,OATAX,qBAAU,WACN,IAAMY,EAAmB,WACrBD,EAAa,CAACJ,OAAOC,WAAYD,OAAOE,eAI5C,OAFAF,OAAOM,iBAAiB,SAAUD,GAE3B,kBAAML,OAAOO,oBAAoB,SAAUF,MACnD,IAEIF,G,QCLLK,G,MAAO,CACT,CAAEC,KAAM,OAAQC,KAAM,OAAQC,KAAM,IAAKC,OAAO,GAChD,CAAEH,KAAM,SAAUC,KAAM,YAAaC,KAAM,aAC3C,CAAEF,KAAM,SAAUC,KAAM,YAAaC,KAAM,gBAyChCE,EAtCA,WAAO,IACVzB,EAAS0B,qBAAW5B,GAApBE,KADS,EAGOU,IAHP,mBAGViB,EAHU,KAYXC,GAZW,KAYJR,EAAKS,KAAI,SAAAC,GAClB,OAAIH,EAAQ,KACD,oBAAII,UAAU,WAAd,SAA4C,eAAC,IAAD,CAASC,GAAIF,EAAQP,KAAMC,QAAOM,EAAQN,OAAQM,EAAQN,MAA1D,UAAyE,cAAC,IAAD,CAAiBH,KAAMS,EAAQT,OAAxG,IAAkHS,EAAQR,SAAxIQ,EAAQR,MACtCK,GAAS,KACT,oBAAII,UAAU,WAAd,SAA4C,cAAC,IAAD,CAASC,GAAIF,EAAQP,KAAMC,QAAOM,EAAQN,OAAQM,EAAQN,MAA1D,SAAyE,cAAC,IAAD,CAAiBH,KAAMS,EAAQT,UAAtHS,EAAQR,WAD1C,MAMX,OACI,mCACI,wBAAQS,UAAU,MAAME,QAlBf,WACRjC,EAEErB,EAAKuD,UHDhBvD,EAAKwD,gBAAgBtD,IGgBb,SAA4CmB,EAAO,cAAC,IAAD,CAAiBqB,KAAK,iBAAoB,cAAC,IAAD,CAAiBA,KAAK,kBACnH,oBAAIU,UAAU,OAAd,qBACA,qBAAKA,UAAU,OAAf,SACI,qBAAIA,UAAU,SAAd,UACKH,EACA5B,EAAO2B,EAAQ,KAAO,oBAAII,UAAU,WAAd,SAAuC,eAAC,IAAD,CAASC,GAAG,WAAWR,OAAO,EAA9B,UAAqC,cAAC,IAAD,CAAiBH,KAAK,SAA3D,oBAAV,WAEhD,oBAAIU,UAAU,WAAd,SAAuC,cAAC,IAAD,CAASC,GAAG,WAAWR,OAAO,EAA9B,SAAqC,cAAC,IAAD,CAAiBH,KAAK,YAArE,WAC3B,c,eCJXe,G,MAxCF,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,WAAYC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aACtD,OACI,iCACI,oDACA,uBAAOC,KAAK,OACRX,UAAU,cACVT,KAAK,QACLqB,YAAY,WACZlC,MAAO4B,EACPO,SAAUH,IAEd,uBAAOV,UAAU,aAAjB,wBACA,uBACIA,UAAU,aACVW,KAAK,OACLpB,KAAK,YACLqB,YAAY,aACZlC,MAAO6B,EACPM,SAAUH,IAEd,uBACIV,UAAU,aACVW,KAAK,OACLpB,KAAK,aACLqB,YAAY,cACZlC,MAAO8B,EACPK,SAAUH,IAEd,uBAAOV,UAAU,aAAjB,yBACA,uBACIA,UAAU,WACVW,KAAK,SACLpB,KAAK,WACLqB,YAAY,mBACZlC,MAAO+B,EACPI,SAAUH,SC+KXI,EA7MF,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,cAAenB,EAA6B,EAA7BA,MAAOoB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAElChD,EAAS0B,qBAAW5B,GAApBE,KAFgD,EAM9BG,mBAAS,IANqB,mBAMjDkC,EANiD,KAM1CY,EAN0C,OAOpB9C,mBAAS,IAPW,mBAOjD+C,EAPiD,KAOrCC,EAPqC,OAQtBhD,mBAAS,IARa,mBAQjDiD,EARiD,KAQtCC,EARsC,OASxBlD,mBAAS,IATe,mBASjDqC,EATiD,KASvCc,EATuC,OAW5BnD,mBAAS,OAXmB,mBAWjDoD,EAXiD,KAWzCC,EAXyC,OAY5BrD,mBAAS,OAZmB,mBAYjDsD,EAZiD,KAYzCC,EAZyC,OAa1BvD,mBAAS,OAbiB,mBAajDwD,EAbiD,KAaxCC,EAbwC,OAc1BzD,mBAAS,OAdiB,mBAcjD0D,EAdiD,KAcxCC,EAdwC,OAgBtB3D,oBAAS,GAhBa,mBAgBjD4D,EAhBiD,KAgBtCC,EAhBsC,KA6ClDC,EAAkBC,uBAAY,SAACC,GACjC,GAAIJ,EAAW,CACX,IAAIK,EAAOC,SAASC,eAAe,YAAYC,wBACzCC,EAAUL,EAAEM,QAAUL,EAAKM,KAC3BC,EAAUR,EAAES,QAAUR,EAAKS,IACb,aAAhBV,EAAEW,OAAOC,IACTvB,EAAU,GAAD,OAAIgB,EAAJ,OACTd,EAAU,GAAD,OAAIiB,EAAJ,QACc,cAAhBR,EAAEW,OAAOC,KAChBnB,EAAW,GAAD,OAAIY,EAAJ,OACVV,EAAW,GAAD,OAAIa,EAAJ,WAGnB,CAACZ,IAGEiB,EAAkBd,uBAAY,WAChCF,GAAa,KACd,IAGGiB,EAAgBf,uBAAY,WAC9BF,GAAa,KACd,IAeGkB,EAAe,SAACH,EAAII,GACtB,GAAW,aAAPJ,EAAmB,CACnB,IAAM7F,EAAImF,SAASe,cAAc,KACjClG,EAAEmG,SAAW,WACbnG,EAAEoG,KAAOH,EACTd,SAASkB,KAAKC,YAAYtG,GAC1BA,EAAEuG,aACC,GAAW,SAAPV,EAAe,CACtB,IAAMW,EAnBM,WAIhB,IAHA,IAAIC,EAAS,GACTC,EAAa,iEACbC,EAAmBD,EAAWE,OACzBC,EAAI,EAAGA,EAAIF,EAAkBE,IAClCJ,GAAUC,EAAWI,OAAOC,KAAKC,MAAMD,KAAKE,SAAWN,IAE3D,OAAOF,EAYYS,GACTC,EAAU,CACZC,MAAOZ,EACPa,KAAM,IAAIC,KACVnE,QACAoE,QAASzG,EAAK0G,IACdC,IAAKxB,EACLyB,MAAO,IAEG,KAAVvE,EAAcwE,MAAM,6BAEpBjI,EACKkI,WAAW,SACXC,IAFL,UAEYrB,IACPsB,IAAIX,GACTQ,MAAM,kBACN5D,EAAS,IACTE,EAAc,IACdE,EAAa,OAMnB4D,EAAa,SAAC9C,GAAO,IACfY,EAAOZ,EAAEW,OAATC,GACFmC,EAAM7C,SAASC,eAAe,eAChC6C,GAAU,IAAIC,eAAgBC,kBAAkBH,GAC9CI,EAASjD,SAASe,cAAc,UACtCkC,EAAOC,aAAa,KAAM,UAC1B,IAAMC,EAAUN,EAAI3C,wBAGdkD,EADW,KADLD,EAAQ7F,MAAQ6F,EAAQzE,QAGpCuE,EAAO3F,MAFU,IAGjB2F,EAAOvE,OAAS0E,EAChB,IAAMC,EAAMrD,SAASe,cAAc,OACnCsC,EAAIH,aAAa,MAAO,6BAA+BI,KAAKC,SAASC,mBAAmBV,MACxFO,EAAII,OAAS,WACTR,EAAOS,WAAW,MAAMC,UAAUN,EAAK,EAAG,GAC1C,IAAMvC,EAAamC,EAAOW,UAAU,aACpC/C,EAAaH,EAAII,KAInB+C,GAAY,CACdC,WAAY,SACZC,cAAe,YACfC,KAAM,OACNC,OAAQ,OACRC,WAAY,QAIhB,OACI,qBAAKxG,UAAU,OAAf,SACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAOE,QAASe,EAA/B,eACA,cAAC,EAAD,CAAMX,MAAOA,EAAOC,WAAYc,EAAWb,YAAaW,EAAYV,SAAUA,EAC1EC,aAjIK,SAAC0B,GAAO,IAAD,EACAA,EAAEW,OAAlBxD,EADgB,EAChBA,KAAMb,EADU,EACVA,MAEd,OAAQa,GACJ,IAAK,YACD+B,EAAa5C,GACb,MACJ,IAAK,aACD0C,EAAc1C,GACd,MACJ,IAAK,WACD6C,EAAY7C,GACZ,MACJ,IAAK,QACDwC,EAASxC,GACT,MACJ,QACIoG,MAAM,UAAD,OAAWvF,EAAX,4EAiHL,sBACIyD,GAAG,cACHpD,MAAOA,EACPoB,OAAQA,EACRyF,MAAM,6BACNC,WAAW,+BALf,UAMI,uBACI1D,GAAG,WACH2D,UAAW5F,EACXC,OAAQA,EACRpB,MAAOA,IAEX,sBACIoD,GAAG,WACH4D,MAAK,2BAAOT,IAAP,IAAkBU,SAAS,GAAD,OAAKpG,EAAL,QAC/BqG,EAAGtF,EACHuF,EAAGrF,EACHsF,iBAAiB,SACjBC,WAAW,SACXC,YAAajE,EACbkE,YAAajF,EACbkF,UAAWlE,EACXmE,aAAcpE,EACdqE,YAAapF,EACbqF,WAAYrE,EAZhB,SAcK7B,IAEL,sBACI2B,GAAG,YACH4D,MAAK,2BAAOT,IAAP,IAAkBU,SAAS,GAAD,OAAKpG,EAAL,QAC/BqG,EAAGlF,EACHmF,EAAGjF,EACHkF,iBAAiB,SACjBC,WAAW,SACXC,YAAajE,EACbkE,YAAajF,EACbkF,UAAWlE,EACXmE,aAAcpE,EACdqE,YAAapF,EACbqF,WAAYrE,EAZhB,SAcK/B,OAGT,sBAAKnB,UAAU,gBAAf,UACI,wBAAQgD,GAAG,WAAW9C,QAASgF,EAA/B,2BACCjH,EAAO,wBAAQ+E,GAAG,OAAO9C,QAASgF,EAA3B,uBAA4D,cC1IzEsC,EAjEA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAAgB,EAElB/I,IAFkB,mBAEnCiB,EAFmC,KAIpC+H,GAJoC,KAIrB,SAACC,GAClB,OAAIhI,EAAQ,IACD,CACHA,MAAO,OACPoB,OAAQ,OACR6G,OAAQ,SACRC,gBAAgB,OAAD,OAASF,EAAIhD,IAAb,KACfmD,iBAAkB,YAClBC,mBAAoB,SACpBC,eAAgB,cAChBC,eAAgB,QAChBC,OAAQ,iBACRC,aAAc,MAEXxI,EAAQ,KAAOA,EAAQ,IACvB,CACHA,MAAO,OACPoB,OAAQ,OACR6G,OAAQ,SACRC,gBAAgB,OAAD,OAASF,EAAIhD,IAAb,KACfmD,iBAAkB,YAClBC,mBAAoB,SACpBC,eAAgB,cAChBC,eAAgB,QAChBC,OAAQ,iBACRC,aAAc,MAGX,CACHxI,MAAO,OACPoB,OAAQ,OACR6G,OAAQ,SACRC,gBAAgB,OAAD,OAASF,EAAIhD,IAAb,KACfmD,iBAAkB,YAClBC,mBAAoB,SACpBC,eAAgB,cAChBC,eAAgB,QAChBC,OAAQ,iBACRC,aAAc,QAKpBC,EAAYZ,EAAW3H,KAAI,SAAA6F,GAAG,OAChC,sBAAK3F,UAAU,kBAA+BE,QAASwH,EAAWY,WAAU3C,EAAIf,IAAhF,UACI,qBAAK5E,UAAU,gBAAgB4G,MAAOe,EAAahC,GAAM2C,WAAU3C,EAAIf,MACvE,mBAAG5E,UAAU,gBAAgBsI,WAAU3C,EAAIf,IAA3C,SAAiDe,EAAIpG,SAFnBoG,EAAI3C,OAM9C,OACI,sBAAKhD,UAAU,oBAAf,UACI,mBAAGA,UAAU,WAAb,0CACA,qBAAKA,UAAU,UAAf,SACKyH,EAAW1D,OAAS,EAAIsE,EAAY,+DC6BtCE,EAnFO,WAAO,IAAD,EACkBnK,mBAAS,IAD3B,mBACjB2C,EADiB,KACFyH,EADE,OAEYpK,mBAAS,IAFrB,mBAEjBqJ,EAFiB,KAELgB,EAFK,OAIUrK,mBAAS,IAJnB,mBAIjBsK,EAJiB,KAINC,EAJM,OAM4BvK,mBAAS,IANrC,mBAMjBwK,EANiB,KAMGC,EANH,OAO8BzK,mBAAS,IAPvC,mBAOjB0K,EAPiB,KAOIC,EAPJ,OAUApK,IAVA,mBAUjBiB,EAViB,UAYxBtB,qBAAU,WACN0K,MAAM,qCACDvL,MAAK,SAAAwL,GAAQ,OAAIA,EAASC,UAC1BzL,MAAK,SAAAwL,GAAa,IACPE,EAAUF,EAASG,KAAnBD,MACRV,EAAcU,QAEvB,IAuDH,OACI,sBAAKnJ,UAAU,UAAf,UAEI,cAAC,EAAD,CAAQyH,WAAYA,EAAYC,UA/CpB,SAACtF,GARbxC,EAAQ,MAAQ,iEAAiEyJ,KAAKjM,UAAUkM,aAC5FhH,SAASiH,gBAAgBC,kBAAmBlH,SAASmH,cAAc,QAAQD,oBACtElH,SAASiH,gBAAgBG,yBAAyBpH,SAASmH,cAAc,QAAQC,0BAC1F7K,OAAO8K,OAAOC,YAAYC,KAAK,sBAKZ,IAEfjF,EAAQxC,EAAEW,OAAO+G,QAAjBlF,IACFmF,EAAYzH,SAASe,cAAc,UACnC2G,EAAY,IAAIC,MACtBD,EAAUpC,IAAMhD,EAChBoF,EAAUE,YAAc,YACxBF,EAAUjE,OAAS,WACf,IAAMoE,EAAMH,EAAUpK,MAAQoK,EAAUhJ,OACxC+I,EAAUnK,MAAQ,IAClBmK,EAAU/I,OAAS+I,EAAUnK,MAAQuK,EACzBJ,EAAU/D,WAAW,MAC7BC,UAAU+D,EAAW,EAAG,EAAGD,EAAUnK,MAAOmK,EAAU/I,QAC1D,IAAMoJ,EAAUL,EAAU7D,UAAU,aACpCsC,EAAiB4B,GACjBvB,EAAsB,GAAD,OAAIkB,EAAUnK,MAAd,OACrBmJ,EAAuB,GAAD,OAAIgB,EAAU/I,OAAd,OACtB2H,GAAa,GACbrG,SAASmH,cAAc,UAAUY,UAAUC,IAAI,UAC/ChI,SAASmH,cAAc,sBAAsBY,UAAUC,IAAI,cA6B1D5B,GAAY3H,GAAiB+H,EAAsB,cAAC,EAAD,CAAM/H,cAAeA,EAAenB,MAAOgJ,EAAoB5H,OAAQ8H,EAAqB7H,QAzBxI,WACZ0H,GAAa,GACbrG,SAASmH,cAAc,UAAUY,UAAUE,OAAO,UAClDjI,SAASmH,cAAc,sBAAsBY,UAAUE,OAAO,UAC1D3K,EAAQ,MAAQ,iEAAiEyJ,KAAKjM,UAAUkM,aAChGzK,OAAO8K,OAAOC,YAAYY,SAC1B3L,OAAO8K,OAAOC,YAAYzK,iBAAiB,UAAU,WACjDxB,QAAQC,IAAIiB,OAAO8K,OAAOC,YAAYjJ,SAG1C2B,SAASnD,iBAAiB,oBAAoB,WAC1CxB,QAAQC,IAAIiB,OAAO8K,OAAOC,YAAYjJ,SAG1C2B,SAASnD,iBAAiB,0BAA0B,WAChDxB,QAAQC,IAAIiB,OAAO8K,OAAOC,YAAYjJ,aAUoI,S,QC9B3K8J,EA/CD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACLzM,EAAS0B,qBAAW5B,GAApBE,KADgB,EAGYG,mBAAS,IAHrB,mBAGjBuM,EAHiB,KAGLC,EAHK,KAKxBtM,qBAAU,WACN,sBAAC,4BAAAnB,EAAA,sEAC2BN,EAAUkI,WAAW,SAASC,IAA9B,UAAqC0F,EAAKnG,QAASsG,MAD9E,OACSC,EADT,OAEGF,EAAcE,EAAU1B,OAAOvE,OAFlC,0CAAD,KAID,CAAC6F,EAAKnG,QA6BT,OACI,sBAAKvE,UAAU,QAAf,UACI,sBAAMA,UAAU,WAAhB,SAA4B2K,EAAW5G,SACvC,wBAAQ/D,UAAU,OAAOgD,GAAI0H,EAAKnG,MAAOrE,QA9BpC,SAACkC,GACV,IAAMuB,EAASvB,EAAEW,OAAOC,GACxBrF,QAAQC,IAAIwE,GACZ,IAAM2I,EAAUlO,EAAUkI,WAAW,SAASC,IAA9B,UAAqCrB,IACjDqH,EAAc,GAElB,IAAI/M,EAiBA,OAAO6G,MAAM,uBAfTkG,EADAL,EAAWM,SAAShN,EAAK0G,KACXgG,EAAWO,QAAO,SAAAnL,GAC5B,OAAOA,IAAY9B,EAAK0G,OAGjB,sBAAOgG,GAAP,CAAmB1M,EAAK0G,MAGvC,sBAAC,4BAAAxH,EAAA,sEACS4N,EAAQI,OAAO,CACjBtG,MAAOmG,IAFd,uBAI2BD,EAAQF,MAJnC,OAISC,EAJT,OAKGF,EAAcE,EAAU1B,OAAOvE,OALlC,0CAAD,IAeA,SAAwD,cAAC,IAAD,CAAiB7E,UAAU,UAAUV,KAAK,oBCV/F8L,G,MAjCE,WAAO,IAAD,EACmBhN,mBAAS,IAD5B,mBACZiN,EADY,KACCC,EADD,KAGnBhN,qBAAU,WACN,sBAAC,4BAAAnB,EAAA,sEAC0BN,EAAUkI,WAAW,SAAS8F,MADxD,OACSU,EADT,OAEGD,EAAeC,EAASC,KAAK1L,KAAI,SAAAkF,GAAG,OAAIA,EAAIoE,WAF/C,0CAAD,KAID,IAGCiC,EAAYtH,QAAU,GACtBsH,EAAYI,MAAK,SAACC,EAAIC,GAClB,OAAID,EAAGlH,KAAOmH,EAAGnH,KAAa,EAC1BkH,EAAGlH,KAAOmH,EAAGnH,MAAc,EACxB,KAIf,IAAM2E,EAAQkC,EAAYvL,KAAI,SAAA4K,GAAI,OAC9B,sBAAK1K,UAAU,gBAAiCgD,GAAI0H,EAAKnG,MAAzD,UACI,mBAAGvE,UAAU,QAAb,SAAsB0K,EAAKpK,QAC3B,cAAC,EAAD,CAAOoK,KAAMA,IACb,qBAAK1K,UAAU,UAAU4H,IAAK8C,EAAK9F,IAAKgH,IAAI,SAC5C,oBAAG5L,UAAU,UAAb,wBAAkC,+BAAO0K,EAAKhG,eAJdgG,EAAKnG,UAQ7C,OACI,qBAAKvE,UAAU,WAAf,SAA2BqL,EAAYtH,OAAS,EAAIoF,EAAQ,+CCuBrD0C,EApDE,WAAO,IAAD,EACezN,mBAAS,IADxB,mBACZ0N,EADY,KACDC,EADC,KAEb9N,EAAOrB,EAAKoP,YAElB1N,qBAAU,WACN,sBAAC,4BAAAnB,EAAA,sEAC0BN,EAAUkI,WAAW,SAAS8F,MADxD,OACSU,EADT,OAEGQ,EAAaR,EAASC,KAAK1L,KAAI,SAAAkF,GAAG,OAAIA,EAAIoE,WAF7C,0CAAD,KAID,IAEC0C,EAAU/H,QAAU,GACpB+H,EAAUL,MAAK,SAACC,EAAIC,GAChB,OAAID,EAAGlH,KAAOmH,EAAGnH,KAAa,EAC1BkH,EAAGlH,KAAOmH,EAAGnH,MAAc,EACxB,KAIf,IAAMyH,EAAa,SAAC7J,GAChB,IAAM8J,EAAY9J,EAAEW,OAAOC,IAEX,IADFnE,OAAOsN,QAAQ,kBAEzBtP,EAAUkI,WAAW,SAASC,IAA9B,UAAqCkH,IAAaE,SAC7C3O,KADL,sBACU,4BAAAN,EAAA,sEACqBN,EAAUkI,WAAW,SAAS8F,MADnD,OACIU,EADJ,OAEFQ,EAAaR,EAASC,KAAK1L,KAAI,SAAAkF,GAAG,OAAIA,EAAIoE,WAFxC,6CAQdD,EAAQ2C,EAAUZ,QAAO,SAAAR,GAAI,OAAIA,EAAKhG,UAAYzG,EAAK0G,IAAM+F,EAAO,QAAM5K,KAAI,SAAA4K,GAAI,OAClF,sBAAK1K,UAAU,gBAAiCgD,GAAI0H,EAAKnG,MAAzD,UACI,mBAAGvE,UAAU,QAAb,SAAsB0K,EAAKpK,QAC3B,qBAAKN,UAAU,QAAf,SACI,sBAAMA,UAAU,WAAhB,SAA4B0K,EAAK7F,MAAMd,WAE3C,qBAAK/D,UAAU,UAAU4H,IAAK8C,EAAK9F,IAAKgH,IAAI,SAC5C,oBAAG5L,UAAU,UAAb,wBAAkC,+BAAO0K,EAAKhG,aAC9C,wBAAQ1E,UAAU,OAAOgD,GAAI0H,EAAKnG,MAAOrE,QAAS+L,EAAlD,SAA8D,cAAC,IAAD,CAAiBjM,UAAU,UAAUV,KAAK,kBAPxEoL,EAAKnG,UAW7C,OACI,sBAAKvE,UAAU,WAAf,UACI,qDACC8L,EAAU/H,OAAS,EAAIoF,EAAQ,yDCZ7BkD,EAnCE,WAAO,IAAD,EACajO,mBAAS,IADtB,mBACZkO,EADY,KACFC,EADE,KAGnBjO,qBAAU,WACN,sBAAC,4BAAAnB,EAAA,sEAC0BN,EAAUkI,WAAW,SAAS8F,MADxD,OACSU,EADT,OAEGgB,EAAYhB,EAASC,KAAK1L,KAAI,SAAAkF,GAAG,OAAIA,EAAIoE,WAF5C,0CAAD,KAID,IAGCkD,EAASvI,QAAU,GACnBuI,EAASb,MAAK,SAACC,EAAIC,GACf,OAAID,EAAG7G,MAAMd,OAAS4H,EAAG9G,MAAMd,OAAe,EAC1C2H,EAAG7G,MAAMd,OAAS4H,EAAG9G,MAAMd,QAAgB,EACxC,KAIf,IAAMoF,EAAQmD,EAASE,MAAM,EAAG,GAAG1M,KAAI,SAAA4K,GAAI,OACvC,sBAAK1K,UAAU,gBAAiCgD,GAAI0H,EAAKnG,MAAzD,UACI,mBAAGvE,UAAU,QAAb,SAAsB0K,EAAKpK,QAC3B,cAAC,EAAD,CAAOoK,KAAMA,IACb,qBAAK1K,UAAU,UAAU4H,IAAK8C,EAAK9F,IAAKgH,IAAI,SAC5C,oBAAG5L,UAAU,UAAb,wBAAkC,+BAAO0K,EAAKhG,eAJdgG,EAAKnG,UAQ7C,OACI,mCACI,qBAAKvE,UAAU,WAAf,SAA2BsM,EAASvI,OAAS,EAAIoF,EAAQ,gDCVtDsD,EAhBC,WAAO,IACXxO,EAAS0B,qBAAW5B,GAApBE,KAER,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOwB,OAAK,EAACD,KAAK,IAAIkN,UAAWtB,IACjC,cAAC,IAAD,CAAO5L,KAAK,YAAYkN,UAAWL,IACnC,cAAC,IAAD,CAAO7M,KAAK,aAAakN,UAAWnE,IACnCtK,EAAO,cAAC,IAAD,CAAOuB,KAAK,WAAWkN,UAAWb,IAAe,KACzD,cAAC,IAAD,CAAOc,OAAQ,kBACX,+DCrBD,MAA0B,oCC2B1BC,EAvBM,WAejB,OACI,qBAAKhG,MAdQ,CACbiG,gBAAiB,OACjBjN,MAAO,OACPoB,OAAQ,SAWR,SACI,qBAAK4G,IAAKkF,EAASlB,IAAI,gBAAgBhF,MAT9B,CACbmG,SAAU,QACVjK,IAAK,MACLH,KAAM,MACNqK,UAAW,8BCyBJC,EA7BH,WAAO,IAAD,EACkB7O,oBAAS,GAD3B,mBACT8O,EADS,KACEC,EADF,OAEsB/O,oBAAS,GAF/B,mBAETgP,EAFS,KAEKlQ,EAFL,KAchB,OAVAS,QAAQC,IAAIwP,GAEZ9O,qBAAU,WACR+O,YAAW,WACTF,GAAa,KACZ,KAEHlQ,EAASC,KACR,IAGD,mCACGgQ,EAAY,cAAC,EAAD,IACX,cAAC,EAAD,UACE,cAAC,IAAD,CAAQI,SAAUC,kBAAlB,SACE,sBAAKvN,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,cCrBRwN,EAAcC,QACW,cAA7B5O,OAAO6O,SAASC,UAEe,UAA7B9O,OAAO6O,SAASC,UAEhB9O,OAAO6O,SAASC,SAASC,MAAM,2DAqCnC,SAASC,EAAgBC,EAAOC,GAC9B3Q,UAAUC,cACPC,SAASwQ,GACTrQ,MAAK,SAACuQ,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfjR,UAAUC,cAAciR,YAI1B3Q,QAAQC,IACN,+GAKEmQ,GAAUA,EAAOQ,UACnBR,EAAOQ,SAASP,KAMlBrQ,QAAQC,IAAI,sCAGRmQ,GAAUA,EAAOS,WACnBT,EAAOS,UAAUR,WAO5BnQ,OAAM,SAAC4Q,GACN9Q,QAAQ8Q,MAAM,4CAA6CA,MC9FjE,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnR,MAAK,YAAkD,IAA/CoR,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCHdO,IAAQ5E,IACJ6E,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KCJJC,IAAShD,OACP,cAAC,IAAMiD,WAAP,UACE,cAAC,EAAD,MAEFtN,SAASC,eAAe,SHQnB,SAAkBwL,GACvB,GAA6C,kBAAmB3Q,UAAW,CAGzE,GADkB,IAAIyS,IAAItC,kBAAwB1O,OAAO6O,SAASnK,MACpDuM,SAAWjR,OAAO6O,SAASoC,OAIvC,OAGFjR,OAAOM,iBAAiB,QAAQ,WAC9B,IAAM2O,EAAK,UAAMP,kBAAN,sBAEPC,IAgEV,SAAiCM,EAAOC,GAEtC/E,MAAM8E,EAAO,CACXiC,QAAS,CAAE,iBAAkB,YAE5BtS,MAAK,SAACwL,GAEL,IAAM+G,EAAc/G,EAAS8G,QAAQlF,IAAI,gBAEnB,MAApB5B,EAASgH,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C9S,UAAUC,cAAc8S,MAAM1S,MAAK,SAACuQ,GAClCA,EAAaoC,aAAa3S,MAAK,WAC7BoB,OAAO6O,SAAS2C,eAKpBxC,EAAgBC,EAAOC,MAG1BlQ,OAAM,WACLF,QAAQC,IAAI,oEAtFV0S,CAAwBxC,EAAOC,GAI/B3Q,UAAUC,cAAc8S,MAAM1S,MAAK,WACjCE,QAAQC,IACN,+GAMJiQ,EAAgBC,EAAOC,OG9B/BvQ,GAKAkR,M","file":"static/js/main.19881614.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport 'firebase/messaging';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA5kSJGlUmKC9PftAV8LyHcpdjoaOwKbJ8\",\r\n    authDomain: \"meme-generator-fe1c4.firebaseapp.com\",\r\n    databaseURL: \"https://meme-generator-fe1c4-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"meme-generator-fe1c4\",\r\n    storageBucket: \"meme-generator-fe1c4.appspot.com\",\r\n    messagingSenderId: \"888796383810\",\r\n    appId: \"1:888796383810:web:657b8ecffc3740a026fbdb\",\r\n    measurementId: \"G-8007NWQCGB\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const signInWithGoogle = () => {\r\n    auth.signInWithPopup(provider);\r\n};\r\n\r\nconst messaging = firebase.messaging();\r\n\r\nexport const getToken = async (setTokenFound) => {\r\n    const serviceWorker = await navigator.serviceWorker.register('service-worker.js')\r\n    return messaging.getToken({\r\n        vapidKey: 'BNpdLHysckNhcRtEnnUFgjCf8HFXOk5HEZHJq63keVcjKJabtwYF0e8OQWeA_3cc22RV3EKfsMWKu7EHLkV9nGw',\r\n        serviceWorkerRegistration: serviceWorker\r\n    }).then((currentToken) => {\r\n        if (currentToken) {\r\n            console.log('current token for client: ', currentToken);\r\n            setTokenFound(true);\r\n        } else {\r\n            console.log('No registration token available. Request permission to generate one.');\r\n            setTokenFound(false);\r\n        }\r\n    }).catch((err) => {\r\n        console.log('An error occurred while retrieving token. ', err);\r\n    });\r\n}","import React, { createContext, useEffect, useState } from \"react\";\r\nimport { auth } from \"../firebase\";\r\n\r\nexport const UserContext = createContext({ user: null });\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null)\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(userAuth => setUser(userAuth))\r\n    }, []);\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n\r\nexport default UserProvider;","import { useEffect, useState } from 'react';\r\n\r\nexport const useWindowWidthAndHeight = () => {\r\n    let windowInnerSize = [window.innerWidth, window.innerHeight];\r\n    let [windowSize, setWidowSize] = useState(windowInnerSize);\r\n\r\n    useEffect(() => {\r\n        const changeWindowSize = () => {\r\n            setWidowSize([window.innerWidth, window.innerHeight]);\r\n        }\r\n        window.addEventListener(\"resize\", changeWindowSize);\r\n\r\n        return () => window.removeEventListener('resize', changeWindowSize);\r\n    }, []);\r\n\r\n    return windowSize;\r\n}","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UserContext } from '../../store/UserProvider';\r\nimport { auth, signInWithGoogle } from \"../../firebase\";\r\nimport { useWindowWidthAndHeight } from \"../../CustomHooks\"\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport './Header.css';\r\n\r\nconst list = [\r\n    { icon: \"home\", name: \"Home\", path: \"/\", exact: true },\r\n    { icon: \"trophy\", name: \"Top Memes\", path: \"/topmemes\" },\r\n    { icon: \"hammer\", name: \"Generator\", path: \"/generator\" },\r\n];\r\n\r\nconst Header = () => {\r\n    const { user } = useContext(UserContext);\r\n    // eslint-disable-next-line\r\n    const [width, height] = useWindowWidthAndHeight();\r\n\r\n    const logInOut = () => {\r\n        if (!user) {\r\n            signInWithGoogle()\r\n        } else auth.signOut();\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n    const menu = list.map(element => {\r\n        if (width > 1024) {\r\n            return <li className=\"nav-list\" key={element.name}><NavLink to={element.path} exact={element.exact ? element.exact : false}><FontAwesomeIcon icon={element.icon} /> {element.name}</NavLink></li>\r\n        } else if (width <= 1024) {\r\n            return <li className=\"nav-list\" key={element.name}><NavLink to={element.path} exact={element.exact ? element.exact : false}><FontAwesomeIcon icon={element.icon} /></NavLink></li>\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <header>\r\n            <button className=\"log\" onClick={logInOut}>{user ? <FontAwesomeIcon icon=\"sign-out-alt\" /> : <FontAwesomeIcon icon=\"sign-in-alt\" />}</button>\r\n            <h1 className=\"logo\">MemeGen</h1>\r\n            <nav className=\"main\">\r\n                <ul className=\"nav-ul\">\r\n                    {menu}\r\n                    {user ? width > 1024 ? <li className=\"nav-list\" key='profile'><NavLink to='/profile' exact={false}><FontAwesomeIcon icon=\"user\" /> User Profile</NavLink></li>\r\n                        :\r\n                        <li className=\"nav-list\" key='profile'><NavLink to='/profile' exact={false}><FontAwesomeIcon icon=\"user\" /></NavLink></li>\r\n                        : null}\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\n\r\nconst Form = ({ title, upperValue, bottomValue, textSize, handleChange }) => {\r\n    return (\r\n        <form>\r\n            <label>Name your meme:</label>\r\n            <input type=\"text\"\r\n                className=\"input-title\"\r\n                name=\"title\"\r\n                placeholder=\"Title...\"\r\n                value={title}\r\n                onChange={handleChange}\r\n            />\r\n            <label className=\"text-label\">Add text: </label>\r\n            <input\r\n                className=\"text-input\"\r\n                type=\"text\"\r\n                name=\"upperText\"\r\n                placeholder=\"Upper Text\"\r\n                value={upperValue}\r\n                onChange={handleChange}\r\n            />\r\n            <input\r\n                className=\"text-input\"\r\n                type=\"text\"\r\n                name=\"bottomText\"\r\n                placeholder=\"Bottom Text\"\r\n                value={bottomValue}\r\n                onChange={handleChange}\r\n            />\r\n            <label className=\"text-label\">Font Size: </label>\r\n            <input\r\n                className=\"input-fz\"\r\n                type=\"number\"\r\n                name=\"textSize\"\r\n                placeholder=\"Select font size\"\r\n                value={textSize}\r\n                onChange={handleChange} />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React, { useCallback, useContext, useState } from 'react';\r\nimport '../meme.css';\r\n\r\nimport Form from './Form';\r\nimport { UserContext } from '../../../store/UserProvider';\r\nimport { firestore } from \"../../../firebase\";\r\n\r\n\r\nconst Meme = ({ selectedImage, width, height, exitGen }) => {\r\n    //USER AUTHENTICATE:\r\n    const { user } = useContext(UserContext);\r\n\r\n    //STATES:\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [bottomText, setBottomText] = useState('');\r\n    const [upperText, setUpperText] = useState('');\r\n    const [textSize, setTextSize] = useState(50)\r\n\r\n    const [upperX, setUpperX] = useState(\"50%\");\r\n    const [upperY, setUpperY] = useState(\"10%\");\r\n    const [bottomX, setBottomX] = useState(\"50%\");\r\n    const [bottomY, setBottomY] = useState(\"90%\");\r\n\r\n    const [isGrabbed, setIsGrabbed] = useState(false);\r\n\r\n\r\n    //FORM EDIT:\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        switch (name) {\r\n            case 'upperText':\r\n                setUpperText(value);\r\n                break;\r\n            case 'bottomText':\r\n                setBottomText(value);\r\n                break;\r\n            case 'textSize':\r\n                setTextSize(value);\r\n                break;\r\n            case 'title':\r\n                setTitle(value);\r\n                break;\r\n            default:\r\n                alert(`Sorry, ${name} does not exist. Report this to us and we will check what happened.`);\r\n        }\r\n    }\r\n\r\n    //GRAB AND DROP FUNCTIONS:\r\n\r\n    //1. Movement of the text:\r\n    const handleMouseMove = useCallback((e) => {\r\n        if (isGrabbed) {\r\n            let rect = document.getElementById('svgImage').getBoundingClientRect();\r\n            const offsetX = e.clientX - rect.left;\r\n            const offsetY = e.clientY - rect.top;\r\n            if (e.target.id === \"uppertxt\") {\r\n                setUpperX(`${offsetX}px`);\r\n                setUpperY(`${offsetY}px`);\r\n            } else if (e.target.id === \"bottomtxt\") {\r\n                setBottomX(`${offsetX}px`);\r\n                setBottomY(`${offsetY}px`);\r\n            }\r\n        }\r\n    }, [isGrabbed]);\r\n\r\n    //2. Movement start:\r\n    const handleMouseDown = useCallback(() => {\r\n        setIsGrabbed(true)\r\n    }, [])\r\n\r\n    //3. Movement end:\r\n    const handleMouseUp = useCallback(() => {\r\n        setIsGrabbed(false)\r\n    }, [])\r\n\r\n\r\n    //5. Meme ID generator\r\n    const idGenerator = () => {\r\n        let result = '';\r\n        let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        let charactersLength = characters.length;\r\n        for (let i = 0; i < charactersLength; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    //6. Function which select action on created meme:\r\n    const actionOnMeme = (id, canvasdata) => {\r\n        if (id === 'download') {\r\n            const a = document.createElement(\"a\");\r\n            a.download = \"meme.png\";\r\n            a.href = canvasdata;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n        } else if (id === 'post') {\r\n            const memeId = idGenerator()\r\n            const newMeme = {\r\n                index: memeId,\r\n                date: new Date(),\r\n                title,\r\n                creator: user.uid,\r\n                url: canvasdata,\r\n                likes: [],\r\n            };\r\n            if (title === '') alert('You should add the title')\r\n            else {\r\n                firestore\r\n                    .collection('memes')\r\n                    .doc(`${memeId}`)\r\n                    .set(newMeme);\r\n                alert('Meme posted :)')\r\n                setTitle('')\r\n                setBottomText('')\r\n                setUpperText('')\r\n            }\r\n        }\r\n    }\r\n\r\n    //Download and post meme function:\r\n    const manageMeme = (e) => {\r\n        const { id } = e.target;\r\n        const svg = document.getElementById(\"createdMeme\");\r\n        let svgData = new XMLSerializer().serializeToString(svg);\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.setAttribute(\"id\", \"canvas\");\r\n        const svgSize = svg.getBoundingClientRect();\r\n        const wrh = svgSize.width / svgSize.height;\r\n        const svgWidth = 700;\r\n        const svgHeight = svgWidth / wrh;\r\n        canvas.width = svgWidth;\r\n        canvas.height = svgHeight;\r\n        const img = document.createElement(\"img\");\r\n        img.setAttribute(\"src\", \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svgData))));\r\n        img.onload = function () {\r\n            canvas.getContext(\"2d\").drawImage(img, 0, 0);\r\n            const canvasdata = canvas.toDataURL(\"image/png\");\r\n            actionOnMeme(id, canvasdata);\r\n        };\r\n    }\r\n\r\n    const textStyle = {\r\n        fontFamily: \"Impact\",\r\n        textTransform: \"uppercase\",\r\n        fill: \"#FFF\",\r\n        stroke: \"#000\",\r\n        userSelect: \"none\"\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"blur\">\r\n            <div className=\"memegen\">\r\n                <div className=\"exit\" onClick={exitGen}>X</div>\r\n                <Form title={title} upperValue={upperText} bottomValue={bottomText} textSize={textSize}\r\n                    handleChange={handleChange} />\r\n                <svg\r\n                    id=\"createdMeme\"\r\n                    width={width}\r\n                    height={height}\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    xmlnsXlink=\"http://www.w3.org/1999/xlink\">\r\n                    <image\r\n                        id=\"svgImage\"\r\n                        xlinkHref={selectedImage}\r\n                        height={height}\r\n                        width={width}\r\n                    />\r\n                    <text\r\n                        id=\"uppertxt\"\r\n                        style={{ ...textStyle, fontSize: `${textSize}px` }}\r\n                        x={upperX}\r\n                        y={upperY}\r\n                        dominantBaseline=\"middle\"\r\n                        textAnchor=\"middle\"\r\n                        onMouseDown={handleMouseDown}\r\n                        onMouseMove={handleMouseMove}\r\n                        onMouseUp={handleMouseUp}\r\n                        onTouchStart={handleMouseDown}\r\n                        onTouchMove={handleMouseMove}\r\n                        onTouchEnd={handleMouseUp}\r\n                    >\r\n                        {upperText}\r\n                    </text>\r\n                    <text\r\n                        id=\"bottomtxt\"\r\n                        style={{ ...textStyle, fontSize: `${textSize}px` }}\r\n                        x={bottomX}\r\n                        y={bottomY}\r\n                        dominantBaseline=\"middle\"\r\n                        textAnchor=\"middle\"\r\n                        onMouseDown={handleMouseDown}\r\n                        onMouseMove={handleMouseMove}\r\n                        onMouseUp={handleMouseUp}\r\n                        onTouchStart={handleMouseDown}\r\n                        onTouchMove={handleMouseMove}\r\n                        onTouchEnd={handleMouseUp}\r\n                    >\r\n                        {bottomText}\r\n                    </text>\r\n                </svg>\r\n                <div className=\"download-post\">\r\n                    <button id='download' onClick={manageMeme}>Download Meme</button>\r\n                    {user ? <button id='post' onClick={manageMeme}>Post Meme</button> : null}\r\n                </div>\r\n            </ div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Meme;","import React from 'react';\r\nimport { useWindowWidthAndHeight } from \"../../../CustomHooks\";\r\n\r\nconst Images = ({ allMemeImg, selectImg }) => {\r\n    // eslint-disable-next-line\r\n    const [width, height] = useWindowWidthAndHeight();\r\n\r\n    const elementStyle = (src) => {\r\n        if (width > 600) {\r\n            return {\r\n                width: \"20vw\",\r\n                height: \"15vw\",\r\n                margin: \"0 auto\",\r\n                backgroundImage: `url(${src.url})`,\r\n                backgroundRepeat: \"no-repeat\",\r\n                backgroundPosition: \"center\",\r\n                backgroundClip: \"content-box\",\r\n                backgroundSize: \"cover\",\r\n                border: \"1px solid #ddd\",\r\n                borderRadius: \"2%\"\r\n            }\r\n        } else if (width < 600 && width > 380) {\r\n            return {\r\n                width: \"40vw\",\r\n                height: \"19vw\",\r\n                margin: \"0 auto\",\r\n                backgroundImage: `url(${src.url})`,\r\n                backgroundRepeat: \"no-repeat\",\r\n                backgroundPosition: \"center\",\r\n                backgroundClip: \"content-box\",\r\n                backgroundSize: \"cover\",\r\n                border: \"1px solid #ddd\",\r\n                borderRadius: \"2%\"\r\n            }\r\n        } else {\r\n            return {\r\n                width: \"85vw\",\r\n                height: \"30vw\",\r\n                margin: \"0 auto\",\r\n                backgroundImage: `url(${src.url})`,\r\n                backgroundRepeat: \"no-repeat\",\r\n                backgroundPosition: \"center\",\r\n                backgroundClip: \"content-box\",\r\n                backgroundSize: \"cover\",\r\n                border: \"1px solid #ddd\",\r\n                borderRadius: \"2%\"\r\n            }\r\n        }\r\n    }\r\n\r\n    const allImages = allMemeImg.map(img =>\r\n        <div className=\"gallery-element\" key={img.id} onClick={selectImg} data-url={img.url} >\r\n            <div className=\"element-image\" style={elementStyle(img)} data-url={img.url}></div>\r\n            <p className=\"element-title\" data-url={img.url}>{img.name}</p>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className=\"gallery-container\">\r\n            <p className=\"gen-info\">Select image to create meme:</p>\r\n            <div className=\"gallery\">\r\n                {allMemeImg.length > 0 ? allImages : <span>Something is wrong...</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Images;","import React, { useState, useEffect } from 'react';\r\n\r\nimport Meme from './subcomponents/Meme';\r\nimport Images from './subcomponents/Images';\r\n\r\nimport { useWindowWidthAndHeight } from \"../../CustomHooks\"\r\n\r\nconst MemeGenerator = () => {\r\n    const [selectedImage, setSelectedImage] = useState('');\r\n    const [allMemeImg, setAllMemeImg] = useState([]);\r\n\r\n    const [modalOpen, setModalOpen] = useState('')\r\n\r\n    const [selectedImageWidth, setSelectedImageWidth] = useState('')\r\n    const [selectedImageHeight, setSelectedImageHeight] = useState('')\r\n\r\n    // eslint-disable-next-line\r\n    const [width, height] = useWindowWidthAndHeight();\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const { memes } = response.data\r\n                setAllMemeImg(memes)\r\n            })\r\n    }, [])\r\n\r\n    const checkMobile = () => {\r\n        if (width < 1025 && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n            if (document.documentElement.requestFullscreen) document.querySelector(\".App\").requestFullscreen();\r\n            else if (document.documentElement.webkitRequestFullScreen) document.querySelector(\".App\").webkitRequestFullScreen();\r\n            window.screen.orientation.lock(\"landscape-primary\")\r\n        }\r\n    }\r\n\r\n\r\n    const handleClick = (e) => {\r\n        checkMobile();\r\n        const { url } = e.target.dataset;\r\n        const base64img = document.createElement(\"canvas\");\r\n        const baseImage = new Image();\r\n        baseImage.src = url;\r\n        baseImage.crossOrigin = \"anonymous\";\r\n        baseImage.onload = function () {\r\n            const wrh = baseImage.width / baseImage.height;\r\n            base64img.width = 700;\r\n            base64img.height = base64img.width / wrh;\r\n            const ctx = base64img.getContext(\"2d\");\r\n            ctx.drawImage(baseImage, 0, 0, base64img.width, base64img.height);\r\n            const dataURL = base64img.toDataURL(\"image/png\");\r\n            setSelectedImage(dataURL);\r\n            setSelectedImageWidth(`${base64img.width}px`);\r\n            setSelectedImageHeight(`${base64img.height}px`);\r\n            setModalOpen(true);\r\n            document.querySelector('header').classList.add('blured');\r\n            document.querySelector('.gallery-container').classList.add('blured');\r\n        }\r\n    }\r\n\r\n    const exitGen = () => {\r\n        setModalOpen(false);\r\n        document.querySelector('header').classList.remove('blured');\r\n        document.querySelector('.gallery-container').classList.remove('blured');\r\n        if (width < 1025 && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n            window.screen.orientation.unlock();\r\n            window.screen.orientation.addEventListener(\"change\", function () {\r\n                console.log(window.screen.orientation.type)\r\n            });\r\n\r\n            document.addEventListener(\"fullscreenchange\", function () {\r\n                console.log(window.screen.orientation.type)\r\n            });\r\n\r\n            document.addEventListener(\"webkitfullscreenchange\", function () {\r\n                console.log(window.screen.orientation.type)\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='maingen'>\r\n            {/* {selectedImage && selectedImageHeight ? <Meme selectedImage={selectedImage} width={selectedImageWidth} height={selectedImageHeight} /> : null} */}\r\n            <Images allMemeImg={allMemeImg} selectImg={handleClick} />\r\n            {modalOpen ? selectedImage && selectedImageHeight ? <Meme selectedImage={selectedImage} width={selectedImageWidth} height={selectedImageHeight} exitGen={exitGen} /> : null : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemeGenerator;","import React, { useContext, useState, useEffect } from 'react';\r\n\r\nimport { UserContext } from '../../store/UserProvider';\r\nimport { firestore } from \"../../firebase\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nconst Likes = ({ meme }) => {\r\n    const { user } = useContext(UserContext);\r\n\r\n    const [likesUsers, setLikesUsers] = useState([])\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const likesList = await firestore.collection('memes').doc(`${meme.index}`).get()\r\n            setLikesUsers(likesList.data().likes)\r\n        })()\r\n    }, [meme.index])\r\n\r\n    const like = (e) => {\r\n        const memeId = e.target.id;\r\n        console.log(e);\r\n        const memeRef = firestore.collection('memes').doc(`${memeId}`);\r\n        let accountList = [];\r\n\r\n        if (user) {\r\n            if (likesUsers.includes(user.uid)) {\r\n                accountList = likesUsers.filter(element => {\r\n                    return element !== user.uid\r\n                })\r\n            } else {\r\n                accountList = [...likesUsers, user.uid];\r\n            };\r\n\r\n            (async () => {\r\n                await memeRef.update({\r\n                    likes: accountList\r\n                })\r\n                const likesList = await memeRef.get()\r\n                setLikesUsers(likesList.data().likes)\r\n            })()\r\n        } else {\r\n            return alert('You have to log in!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"likes\">\r\n            <span className=\"like-num\">{likesUsers.length}</span>\r\n            <button className=\"plus\" id={meme.index} onClick={like}><FontAwesomeIcon className=\"thumbup\" icon=\"thumbs-up\" /></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Likes;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Likes from '../Content/Likes';\r\nimport './HomePage.css';\r\n\r\nimport { firestore } from \"../../firebase\";\r\n\r\n\r\nconst HomePage = () => {\r\n    const [postedMemes, setPostedMemes] = useState([])\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const snapshot = await firestore.collection('memes').get()\r\n            setPostedMemes(snapshot.docs.map(doc => doc.data()))\r\n        })()\r\n    }, [])\r\n\r\n    // sort by date\r\n    if (postedMemes.length >= 2) {\r\n        postedMemes.sort((e1, e2) => {\r\n            if (e1.date < e2.date) return 1\r\n            if (e1.date > e2.date) return -1\r\n            return 0\r\n        })\r\n    }\r\n\r\n    const memes = postedMemes.map(meme => (\r\n        <div className=\"memeContainer\" key={meme.index} id={meme.index}>\r\n            <p className=\"title\">{meme.title}</p>\r\n            <Likes meme={meme} />\r\n            <img className=\"memeimg\" src={meme.url} alt=\"meme\" />\r\n            <p className=\"creator\">Posted by: <span>{meme.creator}</span></p>\r\n        </div>\r\n    ))\r\n\r\n    return (\r\n        <div className=\"HomePage\">{postedMemes.length > 0 ? memes : <p>Loading...</p>}</div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React, { useState, useEffect } from 'react';\r\nimport './HomePage.css'\r\n\r\nimport { auth, firestore } from \"../../firebase\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nconst UserPage = () => {\r\n    const [userMemes, setUserMemes] = useState([]);\r\n    const user = auth.currentUser;\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const snapshot = await firestore.collection('memes').get()\r\n            setUserMemes(snapshot.docs.map(doc => doc.data()))\r\n        })()\r\n    }, [])\r\n\r\n    if (userMemes.length >= 2) {\r\n        userMemes.sort((e1, e2) => {\r\n            if (e1.date < e2.date) return 1\r\n            if (e1.date > e2.date) return -1\r\n            return 0\r\n        })\r\n    }\r\n\r\n    const deleteMeme = (e) => {\r\n        const memeIndex = e.target.id;\r\n        let youSure = window.confirm(\"Are you sure?\")\r\n        if (youSure === true) {\r\n            firestore.collection(\"memes\").doc(`${memeIndex}`).delete()\r\n                .then(async () => {\r\n                    const snapshot = await firestore.collection('memes').get()\r\n                    setUserMemes(snapshot.docs.map(doc => doc.data()))\r\n                })\r\n        } else return;\r\n\r\n    }\r\n\r\n    let memes = userMemes.filter(meme => meme.creator === user.uid ? meme : null).map(meme => (\r\n        <div className=\"memeContainer\" key={meme.index} id={meme.index}>\r\n            <p className=\"title\">{meme.title}</p>\r\n            <div className=\"likes\">\r\n                <span className=\"like-num\">{meme.likes.length}</span>\r\n            </div>\r\n            <img className=\"memeimg\" src={meme.url} alt=\"meme\" />\r\n            <p className=\"creator\">Posted by: <span>{meme.creator}</span></p>\r\n            <button className=\"plus\" id={meme.index} onClick={deleteMeme}><FontAwesomeIcon className=\"thumbup\" icon=\"trash-alt\" /></button>\r\n        </div>))\r\n\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <h4>Your created memes:</h4>\r\n            {userMemes.length > 0 ? memes : <p>You have no memes...</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPage;","import React, { useState, useEffect } from 'react';\r\nimport Likes from '../Content/Likes';\r\nimport './HomePage.css'\r\n\r\nimport { firestore } from \"../../firebase\";\r\n\r\n\r\nconst TopMemes = () => {\r\n    const [topMemes, setTopMemes] = useState([])\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const snapshot = await firestore.collection('memes').get()\r\n            setTopMemes(snapshot.docs.map(doc => doc.data()))\r\n        })()\r\n    }, [])\r\n\r\n    // sort by likes\r\n    if (topMemes.length >= 2) {\r\n        topMemes.sort((e1, e2) => {\r\n            if (e1.likes.length < e2.likes.length) return 1\r\n            if (e1.likes.length > e2.likes.length) return -1\r\n            return 0\r\n        })\r\n    }\r\n\r\n    const memes = topMemes.slice(0, 5).map(meme => (\r\n        <div className=\"memeContainer\" key={meme.index} id={meme.index}>\r\n            <p className=\"title\">{meme.title}</p>\r\n            <Likes meme={meme} />\r\n            <img className=\"memeimg\" src={meme.url} alt=\"meme\" />\r\n            <p className=\"creator\">Posted by: <span>{meme.creator}</span></p>\r\n        </div>\r\n    ))\r\n\r\n    return (\r\n        <>\r\n            <div className=\"HomePage\">{topMemes.length > 0 ? memes : <p>Loading...</p>}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopMemes;","import React, { useContext } from 'react'\r\n\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { UserContext } from '../../store/UserProvider';\r\n\r\nimport MemeGenerator from '../MemeGenerator/MemeGenerator';\r\nimport HomePage from '../PortalPages/HomePage';\r\nimport UserPage from '../PortalPages/UserPage';\r\nimport TopMemes from '../PortalPages/TopMemes';\r\n\r\n\r\nconst Content = () => {\r\n    const { user } = useContext(UserContext);\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route path='/topmemes' component={TopMemes} />\r\n            <Route path='/generator' component={MemeGenerator} />\r\n            {user ? <Route path='/profile' component={UserPage} /> : null}\r\n            <Route render={() => (\r\n                <h2>Strona nie istnieje...</h2>\r\n            )} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Content;","export default __webpack_public_path__ + \"static/media/loading.3920eac7.gif\";","import React from 'react';\r\nimport loading from '../../img/Splash/loading.gif'\r\n\r\n\r\nconst SplashScreen = () => {\r\n\r\n    const divStyle = {\r\n        backgroundColor: '#444',\r\n        width: '100%',\r\n        height: '100vh'\r\n    }\r\n\r\n    const imgStyle = {\r\n        position: 'fixed',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n\r\n    return (\r\n        <div style={divStyle}>\r\n            <img src={loading} alt='splash-screen' style={imgStyle} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SplashScreen;","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport UserProvider from './store/UserProvider';\r\n\r\nimport Header from './components/Header/Header';\r\nimport Content from './components/Content/Content';\r\nimport SplashScreen from './components/Content/SplashScreen';\r\n\r\nimport { getToken } from './firebase';\r\n\r\nconst App = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isTokenFound, setTokenFound] = useState(false);\r\n\r\n  console.log(isTokenFound);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsLoading(false)\r\n    }, 2000);\r\n\r\n    getToken(setTokenFound);\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? <SplashScreen /> :\r\n        <UserProvider>\r\n          <Router basename={process.env.PUBLIC_URL}>\r\n            <div className=\"App\">\r\n              <Header />\r\n              <Content />\r\n            </div>\r\n          </Router>\r\n        </UserProvider>\r\n      }\r\n    </>);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { library } from '@fortawesome/fontawesome-svg-core';\r\n\r\nimport { faHome, faUser, faHammer, faTrophy, faThumbsUp, faSignInAlt, faSignOutAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(\r\n    faHome,\r\n    faUser,\r\n    faHammer,\r\n    faTrophy,\r\n    faThumbsUp,\r\n    faSignInAlt,\r\n    faSignOutAlt,\r\n    faTrashAlt,\r\n);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './fontawesome';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}