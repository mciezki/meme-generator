{"version":3,"sources":["firebase.js","store/UserProvider.js","components/Header/Header.js","components/MemeGenerator/subcomponents/Form.js","components/MemeGenerator/subcomponents/Meme.js","components/MemeGenerator/subcomponents/Images.js","components/MemeGenerator/MemeGenerator.js","components/Content/Likes.js","components/PortalPages/HomePage.js","components/PortalPages/UserPage.js","components/PortalPages/TopMemes.js","components/Content/Content.js","img/Splash/loading.gif","components/Content/SplashScreen.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","provider","GoogleAuthProvider","messaging","getToken","setTokenFound","a","navigator","serviceWorker","register","vapidKey","serviceWorkerRegistration","then","currentToken","console","log","catch","err","UserContext","createContext","user","UserProvider","children","useState","setUser","useEffect","onAuthStateChanged","userAuth","Provider","value","list","name","path","exact","Header","useContext","menu","map","element","to","className","onClick","signOut","signInWithPopup","Form","title","upperValue","bottomValue","textSize","handleChange","type","placeholder","onChange","Meme","selectedImage","width","height","setTitle","bottomText","setBottomText","upperText","setUpperText","setTextSize","upperX","setUpperX","upperY","setUpperY","bottomX","setBottomX","bottomY","setBottomY","isGrabbed","setIsGrabbed","handleMouseMove","useCallback","e","rect","document","getElementById","getBoundingClientRect","offsetX","clientX","left","offsetY","clientY","top","target","id","handleMouseDown","handleMouseUp","addEventListener","removeEventListener","actionOnMeme","canvasdata","createElement","download","href","body","appendChild","click","memeId","result","characters","charactersLength","length","i","charAt","Math","floor","random","idGenerator","newMeme","index","date","Date","creator","uid","url","likes","alert","collection","doc","set","manageMeme","svg","svgData","XMLSerializer","serializeToString","canvas","setAttribute","svgSize","img","btoa","unescape","encodeURIComponent","onload","getContext","drawImage","toDataURL","textStyle","fontFamily","textTransform","fill","stroke","userSelect","xmlns","xmlnsXlink","xlinkHref","style","fontSize","x","y","dominantBaseline","textAnchor","onMouseDown","onMouseUp","Images","allMemeImg","selectImg","allImages","data-url","MemeGenerator","setSelectedImage","setAllMemeImg","selectedImageWidth","setSelectedImageWidth","selectedImageHeight","setSelectedImageHeight","fetch","response","json","memes","data","dataset","base64img","baseImage","Image","src","crossOrigin","wrh","dataURL","querySelector","scrollIntoView","behavior","Likes","meme","likesUsers","setLikesUsers","get","likesList","memeRef","accountList","includes","filter","update","HomePage","postedMemes","setPostedMemes","snapshot","docs","sort","e1","e2","alt","UserPage","userMemes","setUserMemes","currentUser","deleteMeme","memeIndex","window","confirm","delete","TopMemes","topMemes","setTopMemes","slice","Content","component","render","SplashScreen","backgroundColor","loading","position","transform","App","isLoading","setIsLoading","isTokenFound","setTimeout","basename","process","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","URL","origin","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.30ed47bc.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport 'firebase/messaging';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA5kSJGlUmKC9PftAV8LyHcpdjoaOwKbJ8\",\r\n    authDomain: \"meme-generator-fe1c4.firebaseapp.com\",\r\n    databaseURL: \"https://meme-generator-fe1c4-default-rtdb.europe-west1.firebasedatabase.app/\",\r\n    projectId: \"meme-generator-fe1c4\",\r\n    storageBucket: \"meme-generator-fe1c4.appspot.com\",\r\n    messagingSenderId: \"888796383810\",\r\n    appId: \"1:888796383810:web:657b8ecffc3740a026fbdb\",\r\n    measurementId: \"G-8007NWQCGB\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const signInWithGoogle = () => {\r\n    auth.signInWithPopup(provider);\r\n};\r\n\r\nconst messaging = firebase.messaging();\r\n\r\nexport const getToken = async (setTokenFound) => {\r\n    const serviceWorker = await navigator.serviceWorker.register('service-worker.js')\r\n    return messaging.getToken({\r\n        vapidKey: 'BNpdLHysckNhcRtEnnUFgjCf8HFXOk5HEZHJq63keVcjKJabtwYF0e8OQWeA_3cc22RV3EKfsMWKu7EHLkV9nGw',\r\n        serviceWorkerRegistration: serviceWorker\r\n    }).then((currentToken) => {\r\n        if (currentToken) {\r\n            console.log('current token for client: ', currentToken);\r\n            setTokenFound(true);\r\n        } else {\r\n            console.log('No registration token available. Request permission to generate one.');\r\n            setTokenFound(false);\r\n        }\r\n    }).catch((err) => {\r\n        console.log('An error occurred while retrieving token. ', err);\r\n    });\r\n}","import React, { createContext, useEffect, useState } from \"react\";\r\nimport { auth } from \"../firebase\";\r\n\r\nexport const UserContext = createContext({ user: null });\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null)\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(userAuth => setUser(userAuth))\r\n    }, []);\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n\r\nexport default UserProvider;","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UserContext } from '../../store/UserProvider';\r\nimport { auth, signInWithGoogle } from \"../../firebase\";\r\n\r\nimport './Header.css';\r\n\r\nconst list = [\r\n    { name: \"Start\", path: \"/\", exact: true },\r\n    { name: \"Top Memes\", path: \"/topmemes\" },\r\n    { name: \"Generator\", path: \"/generator\" },\r\n];\r\n\r\nconst Header = () => {\r\n    const { user } = useContext(UserContext);\r\n\r\n    const logInOut = () => {\r\n        if (!user) {\r\n            signInWithGoogle()\r\n        } else auth.signOut();\r\n    }\r\n\r\n    const menu = list.map(element => (\r\n        <li key={element.name}><NavLink to={element.path} exact={element.exact ? element.exact : false}>{element.name}</NavLink></li>\r\n    ))\r\n\r\n\r\n    return (\r\n        <header>\r\n            <button className=\"log\" onClick={logInOut}>{user ? 'Logout' : 'Sign in with Google'}</button>\r\n            <h1>Meme Generator</h1>\r\n            <nav className=\"main\">\r\n                <ul>\r\n                    {menu}\r\n                    {user ? <li key='profile'><NavLink to='/profile' exact={false}>User Profile</NavLink></li> : null}\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\n//NEED HARD CSS - alpha version\r\n\r\nconst Form = ({ title, upperValue, bottomValue, textSize, handleChange }) => {\r\n    return (\r\n        <form>\r\n            <label>Name your meme:</label>\r\n            <br />\r\n            <input type=\"text\"\r\n                name=\"title\"\r\n                placeholder=\"Title...\"\r\n                value={title}\r\n                onChange={handleChange}\r\n            />\r\n            <br />\r\n            <br />\r\n            <label>Add text: </label>\r\n            <br />\r\n            <input\r\n                type=\"text\"\r\n                name=\"upperText\"\r\n                placeholder=\"Upper Text\"\r\n                value={upperValue}\r\n                onChange={handleChange}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"bottomText\"\r\n                placeholder=\"Bottom Text\"\r\n                value={bottomValue}\r\n                onChange={handleChange}\r\n            />\r\n            <br />\r\n            <label>Font Size: </label>\r\n            <input\r\n                type=\"number\"\r\n                name=\"textSize\"\r\n                placeholder=\"Select font size\"\r\n                value={textSize}\r\n                onChange={handleChange} />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport '../meme.css';\r\n\r\nimport Form from './Form';\r\nimport { UserContext } from '../../../store/UserProvider';\r\nimport { firestore } from \"../../../firebase\";\r\n\r\nconst Meme = ({ selectedImage, width, height }) => {\r\n    //USER AUTHENTICATE:\r\n    const { user } = useContext(UserContext);\r\n\r\n    //STATES:\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [bottomText, setBottomText] = useState('');\r\n    const [upperText, setUpperText] = useState('');\r\n    const [textSize, setTextSize] = useState(50)\r\n\r\n    const [upperX, setUpperX] = useState(\"50%\");\r\n    const [upperY, setUpperY] = useState(\"10%\");\r\n    const [bottomX, setBottomX] = useState(\"50%\");\r\n    const [bottomY, setBottomY] = useState(\"90%\");\r\n\r\n    const [isGrabbed, setIsGrabbed] = useState(false);\r\n\r\n\r\n    //FORM EDIT:\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        switch (name) {\r\n            case 'upperText':\r\n                setUpperText(value);\r\n                break;\r\n            case 'bottomText':\r\n                setBottomText(value);\r\n                break;\r\n            case 'textSize':\r\n                setTextSize(value);\r\n                break;\r\n            case 'title':\r\n                setTitle(value);\r\n                break;\r\n            default:\r\n                alert(`Sorry, ${name} does not exist. Report this to us and we will check what happened.`);\r\n        }\r\n    }\r\n\r\n    //GRAB AND DROP FUNCTIONS:\r\n\r\n    //1. Movement of the text:\r\n    const handleMouseMove = useCallback((e) => {\r\n        if (isGrabbed) {\r\n            let rect = document.getElementById('svgImage').getBoundingClientRect();\r\n            const offsetX = e.clientX - rect.left;\r\n            const offsetY = e.clientY - rect.top;\r\n            if (e.target.id === \"uppertxt\") {\r\n                setUpperX(`${offsetX}px`);\r\n                setUpperY(`${offsetY}px`);\r\n            } else if (e.target.id === \"bottomtxt\") {\r\n                setBottomX(`${offsetX}px`);\r\n                setBottomY(`${offsetY}px`);\r\n            }\r\n        }\r\n    }, [isGrabbed]);\r\n\r\n    //2. Movement start:\r\n    const handleMouseDown = useCallback(() => {\r\n        setIsGrabbed(true)\r\n    }, [])\r\n\r\n    //3. Movement end:\r\n    const handleMouseUp = useCallback(() => {\r\n        setIsGrabbed(false)\r\n    }, [])\r\n\r\n\r\n    //4. useEffect hook - update of changing state:\r\n    useEffect(() => {\r\n        if (isGrabbed) document.addEventListener('mousemove', handleMouseMove);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousemove', handleMouseMove);\r\n        }\r\n    }, [handleMouseMove, handleMouseUp, isGrabbed])\r\n\r\n\r\n    //5. Meme ID generator\r\n    const idGenerator = () => {\r\n        let result = '';\r\n        let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        let charactersLength = characters.length;\r\n        for (let i = 0; i < charactersLength; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    //6. Function which select action on created meme:\r\n    const actionOnMeme = (id, canvasdata) => {\r\n        if (id === 'download') {\r\n            const a = document.createElement(\"a\");\r\n            a.download = \"meme.png\";\r\n            a.href = canvasdata;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n        } else if (id === 'post') {\r\n            const memeId = idGenerator()\r\n            const newMeme = {\r\n                index: memeId,\r\n                date: new Date(),\r\n                title,\r\n                creator: user.uid,\r\n                url: canvasdata,\r\n                likes: [],\r\n            };\r\n            if (title === '') alert('You should add the title')\r\n            else {\r\n                firestore\r\n                    .collection('memes')\r\n                    .doc(`${memeId}`)\r\n                    .set(newMeme);\r\n                alert('Meme posted :)')\r\n                setTitle('')\r\n                setBottomText('')\r\n                setUpperText('')\r\n            }\r\n        }\r\n    }\r\n\r\n    //Download and post meme function:\r\n    const manageMeme = (e) => {\r\n        const { id } = e.target;\r\n        const svg = document.getElementById(\"createdMeme\");\r\n        let svgData = new XMLSerializer().serializeToString(svg);\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.setAttribute(\"id\", \"canvas\");\r\n        const svgSize = svg.getBoundingClientRect();\r\n        canvas.width = svgSize.width;\r\n        canvas.height = svgSize.height;\r\n        const img = document.createElement(\"img\");\r\n        img.setAttribute(\"src\", \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svgData))));\r\n        img.onload = function () {\r\n            canvas.getContext(\"2d\").drawImage(img, 0, 0);\r\n            const canvasdata = canvas.toDataURL(\"image/png\");\r\n            actionOnMeme(id, canvasdata);\r\n        };\r\n    }\r\n\r\n    const textStyle = {\r\n        fontFamily: \"Impact\",\r\n        textTransform: \"uppercase\",\r\n        fill: \"#FFF\",\r\n        stroke: \"#000\",\r\n        userSelect: \"none\"\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"memegen\">\r\n            <Form title={title} upperValue={upperText} bottomValue={bottomText} textSize={textSize}\r\n                handleChange={handleChange} />\r\n            <svg\r\n                id=\"createdMeme\"\r\n                width={width}\r\n                height={height}\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                xmlnsXlink=\"http://www.w3.org/1999/xlink\">\r\n                <image\r\n                    id=\"svgImage\"\r\n                    xlinkHref={selectedImage}\r\n                    height={height}\r\n                    width={width}\r\n                />\r\n                <text\r\n                    id=\"uppertxt\"\r\n                    style={{ ...textStyle, fontSize: `${textSize}px` }}\r\n                    x={upperX}\r\n                    y={upperY}\r\n                    dominantBaseline=\"middle\"\r\n                    textAnchor=\"middle\"\r\n                    onMouseDown={handleMouseDown}\r\n                    onMouseUp={handleMouseUp}\r\n                >\r\n                    {upperText}\r\n                </text>\r\n                <text\r\n                    id=\"bottomtxt\"\r\n                    style={{ ...textStyle, fontSize: `${textSize}px` }}\r\n                    x={bottomX}\r\n                    y={bottomY}\r\n                    dominantBaseline=\"middle\"\r\n                    textAnchor=\"middle\"\r\n                    onMouseDown={handleMouseDown}\r\n                    onMouseUp={handleMouseUp}\r\n                >\r\n                    {bottomText}\r\n                </text>\r\n            </svg>\r\n            <br />\r\n            <button id='download' onClick={manageMeme}>Download Meme</button>\r\n            <br />\r\n            {user ? <button id='post' onClick={manageMeme}>Post Meme</button> : null}\r\n        </ div>\r\n    )\r\n}\r\n\r\nexport default Meme;","import React from 'react';\r\n\r\nconst Images = ({ allMemeImg, selectImg }) => {\r\n    const allImages = allMemeImg.map(img => <p className=\"gallery-element\" key={img.id} onClick={selectImg} data-url={img.url}>{img.name}</p>)\r\n\r\n    return (\r\n        <div>\r\n            {allMemeImg.length > 0 ? allImages : <span>Something is wrong...</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Images;","import React, { useState, useEffect } from 'react';\r\n\r\nimport Meme from './subcomponents/Meme';\r\nimport Images from './subcomponents/Images';\r\n\r\nconst MemeGenerator = () => {\r\n    const [selectedImage, setSelectedImage] = useState('');\r\n    const [allMemeImg, setAllMemeImg] = useState([]);\r\n\r\n    const [selectedImageWidth, setSelectedImageWidth] = useState('')\r\n    const [selectedImageHeight, setSelectedImageHeight] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const { memes } = response.data\r\n                setAllMemeImg(memes)\r\n            })\r\n    }, [])\r\n\r\n\r\n    const handleClick = (e) => {\r\n        const { url } = e.target.dataset;\r\n        const base64img = document.createElement(\"canvas\");\r\n        const baseImage = new Image();\r\n        baseImage.src = url;\r\n        baseImage.crossOrigin = \"anonymous\";\r\n        baseImage.onload = function () {\r\n            const wrh = baseImage.width / baseImage.height;\r\n            base64img.width = 700;\r\n            base64img.height = base64img.width / wrh;\r\n            const ctx = base64img.getContext(\"2d\");\r\n            ctx.drawImage(baseImage, 0, 0, base64img.width, base64img.height);\r\n            const dataURL = base64img.toDataURL(\"image/png\");\r\n            setSelectedImage(dataURL);\r\n            setSelectedImageWidth(`${base64img.width}px`);\r\n            setSelectedImageHeight(`${base64img.height}px`);\r\n            const chosen = document.querySelector('.maingen');\r\n            chosen.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='maingen'>\r\n            {selectedImage && selectedImageHeight ? <Meme selectedImage={selectedImage} width={selectedImageWidth} height={selectedImageHeight} /> : null}\r\n            <Images allMemeImg={allMemeImg} selectImg={handleClick} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemeGenerator;","import React, { useContext, useState, useEffect } from 'react';\r\n\r\nimport { UserContext } from '../../store/UserProvider';\r\nimport { firestore } from \"../../firebase\";\r\n\r\n\r\nconst Likes = ({ meme }) => {\r\n    const { user } = useContext(UserContext);\r\n\r\n    const [likesUsers, setLikesUsers] = useState([])\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const likesList = await firestore.collection('memes').doc(`${meme.index}`).get()\r\n            setLikesUsers(likesList.data().likes)\r\n        })()\r\n    }, [])\r\n\r\n    const like = (e) => {\r\n        const memeId = e.target.id;\r\n        const memeRef = firestore.collection('memes').doc(`${memeId}`);\r\n        let accountList = [];\r\n\r\n        if (user) {\r\n            if (likesUsers.includes(user.uid)) {\r\n                accountList = likesUsers.filter(element => {\r\n                    return element !== user.uid\r\n                })\r\n            } else {\r\n                accountList = [...likesUsers, user.uid];\r\n            };\r\n\r\n            (async () => {\r\n                await memeRef.update({\r\n                    likes: accountList\r\n                })\r\n                const likesList = await memeRef.get()\r\n                setLikesUsers(likesList.data().likes)\r\n            })()\r\n        } else {\r\n            return alert('You have to log in!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"likes\">\r\n            <span className=\"like-num\">{likesUsers.length}</span>\r\n            <span className=\"plus\" id={meme.index} onClick={like}>+</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Likes;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Likes from '../Content/Likes';\r\nimport './HomePage.css';\r\n\r\nimport { firestore } from \"../../firebase\";\r\n\r\n\r\nconst HomePage = () => {\r\n    const [postedMemes, setPostedMemes] = useState([])\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const snapshot = await firestore.collection('memes').get()\r\n            setPostedMemes(snapshot.docs.map(doc => doc.data()))\r\n        })()\r\n    }, [])\r\n\r\n    // sort by date\r\n    if (postedMemes.length >= 2) {\r\n        postedMemes.sort((e1, e2) => {\r\n            if (e1.date < e2.date) return 1\r\n            if (e1.date > e2.date) return -1\r\n            return 0\r\n        })\r\n    }\r\n\r\n    const memes = postedMemes.map(meme => (\r\n        <div className=\"memeContainer\" key={meme.index} id={meme.index}>\r\n            <p className=\"title\">{meme.title}</p>\r\n            <Likes meme={meme} />\r\n            <img src={meme.url} alt=\"meme\" />\r\n            <p className=\"creator\">Posted by: <span>{meme.creator}</span></p>\r\n        </div>\r\n    ))\r\n\r\n    return (\r\n        <div className=\"HomePage\">{postedMemes.length > 0 ? memes : <p>Loading...</p>}</div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React, { useState, useEffect } from 'react';\r\nimport './HomePage.css'\r\n\r\nimport { auth, firestore } from \"../../firebase\";\r\n\r\n\r\nconst UserPage = () => {\r\n    const [userMemes, setUserMemes] = useState([]);\r\n    const user = auth.currentUser;\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const snapshot = await firestore.collection('memes').get()\r\n            setUserMemes(snapshot.docs.map(doc => doc.data()))\r\n        })()\r\n    }, [])\r\n\r\n    if (userMemes.length >= 2) {\r\n        userMemes.sort((e1, e2) => {\r\n            if (e1.date < e2.date) return 1\r\n            if (e1.date > e2.date) return -1\r\n            return 0\r\n        })\r\n    }\r\n\r\n    const deleteMeme = (e) => {\r\n        const memeIndex = e.target.id;\r\n        let youSure = window.confirm(\"Are you sure?\")\r\n        if (youSure === true) {\r\n            firestore.collection(\"memes\").doc(`${memeIndex}`).delete()\r\n                .then(async () => {\r\n                    const snapshot = await firestore.collection('memes').get()\r\n                    setUserMemes(snapshot.docs.map(doc => doc.data()))\r\n                })\r\n        } else return;\r\n\r\n    }\r\n\r\n    let memes = userMemes.filter(meme => meme.creator === user.uid ? meme : null).map(meme => (\r\n        <div className=\"memeContainer\" key={meme.index} id={meme.index}>\r\n            <p className=\"title\">{meme.title}</p>\r\n            <div className=\"likes\">\r\n                <span className=\"like-num\">Likes: {meme.likes.length}</span>\r\n            </div>\r\n            <img src={meme.url} alt=\"meme\" />\r\n            <p className=\"creator\">Posted by: <span>{meme.creator}</span></p>\r\n            <button id={meme.index} onClick={deleteMeme}>Delete</button>\r\n        </div>))\r\n\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <h4>Your created memes:</h4>\r\n            {userMemes.length > 0 ? memes : <p>You have no memes...</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPage;","import React, { useState, useEffect } from 'react';\r\nimport Likes from '../Content/Likes';\r\nimport './HomePage.css'\r\n\r\nimport { firestore } from \"../../firebase\";\r\n\r\n\r\nconst TopMemes = () => {\r\n    const [topMemes, setTopMemes] = useState([])\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const snapshot = await firestore.collection('memes').get()\r\n            setTopMemes(snapshot.docs.map(doc => doc.data()))\r\n        })()\r\n    }, [])\r\n\r\n    // sort by likes\r\n    if (topMemes.length >= 2) {\r\n        topMemes.sort((e1, e2) => {\r\n            if (e1.likes.length < e2.likes.length) return 1\r\n            if (e1.likes.length > e2.likes.length) return -1\r\n            return 0\r\n        })\r\n    }\r\n\r\n    const memes = topMemes.slice(0, 5).map(meme => (\r\n        <div className=\"memeContainer\" key={meme.index} id={meme.index}>\r\n            <p className=\"title\">{meme.title}</p>\r\n            <Likes meme={meme} />\r\n            <img src={meme.url} alt=\"meme\" />\r\n            <p className=\"creator\">Posted by: <span>{meme.creator}</span></p>\r\n        </div>\r\n    ))\r\n\r\n    return (\r\n        <>\r\n            <p>Top 5 memes!</p>\r\n            <div className=\"HomePage\">{topMemes.length > 0 ? memes : <p>Loading...</p>}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopMemes;","import React, { useContext } from 'react'\r\n\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { UserContext } from '../../store/UserProvider';\r\n\r\nimport MemeGenerator from '../MemeGenerator/MemeGenerator';\r\nimport HomePage from '../PortalPages/HomePage';\r\nimport UserPage from '../PortalPages/UserPage';\r\nimport TopMemes from '../PortalPages/TopMemes';\r\n\r\n\r\nconst Content = () => {\r\n    const { user } = useContext(UserContext);\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route path='/topmemes' component={TopMemes} />\r\n            <Route path='/generator' component={MemeGenerator} />\r\n            {user ? <Route path='/profile' component={UserPage} /> : null}\r\n            <Route render={() => (\r\n                <h2>Strona nie istnieje...</h2>\r\n            )} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Content;","export default __webpack_public_path__ + \"static/media/loading.01b22d1d.gif\";","import React from 'react';\r\nimport loading from '../../img/Splash/loading.gif'\r\n\r\n\r\nconst SplashScreen = () => {\r\n\r\n    const divStyle = {\r\n        backgroundColor: '#0099AA',\r\n        width: '100%',\r\n        height: '100vh'\r\n    }\r\n\r\n    const imgStyle = {\r\n        position: 'fixed',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n\r\n    return (\r\n        <div style={divStyle}>\r\n            <img src={loading} alt='splash-screen' style={imgStyle} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SplashScreen;","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport UserProvider from './store/UserProvider';\r\n\r\nimport Header from './components/Header/Header';\r\nimport Content from './components/Content/Content';\r\nimport SplashScreen from './components/Content/SplashScreen';\r\n\r\nimport { getToken } from './firebase';\r\n\r\nconst App = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isTokenFound, setTokenFound] = useState(false);\r\n\r\n  console.log(isTokenFound);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsLoading(false)\r\n    }, 2000);\r\n\r\n    getToken(setTokenFound);\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? <SplashScreen /> :\r\n        <UserProvider>\r\n          <Router basename={process.env.PUBLIC_URL}>\r\n            <div className=\"App\">\r\n              <Header />\r\n              <Content />\r\n            </div>\r\n          </Router>\r\n        </UserProvider>\r\n      }\r\n    </>);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}